const { bot, botInfo } = require('../config/bot');
const { players, isStarted, timeout } = require('../utils/gameState');
const { startGameRegistration } = require('./registration');
const { sendRoleActionMessages } = require('./roleActions');

function setupCommandHandlers() {
  bot.onText(/^\/start(@\w+)?$/, (msg, match) => {
    if (!botInfo) return;
    
    if (!match[1] || match[1] === `@${botInfo.username}`) {
      startGameRegistration(msg);
    }
  });

  bot.onText(/^—Å—Ç–∞—Ä—Ç$/, (msg) => {
    startGameRegistration(msg);
  });

  bot.onText(/^\/test$/, (msg) => {
    if (isStarted) {
      bot.sendMessage(msg.chat.id, "–°–ø–æ—á–∞—Ç–∫—É –∑–∞–≤–µ—Ä—à—ñ—Ç—å –ø–æ—Ç–æ—á–Ω—É –≥—Ä—É –∫–æ–º–∞–Ω–¥–æ—é /stop");
      return;
    }

    players.length = 0;
    
    players.push(
      { 
        id: msg.from.id, 
        name: msg.from.first_name,
        username: msg.from.username || "",
        role: 'mafia',
        isAlive: true
      },
      {
        id: 123456789,
        name: "Test Doctor",
        username: "test_doctor",
        role: 'doctor',
        isAlive: true
      },
      {
        id: 987654321,
        name: "Test Commissioner",
        username: "test_commissioner",
        role: 'commissioner',
        isAlive: true
      },
      {
        id: 111222333,
        name: "Test Citizen",
        username: "test_citizen",
        role: 'peaceful',
        isAlive: true
      }
    );

    bot.sendMessage(msg.chat.id, "üîÑ –¢–µ—Å—Ç–æ–≤–∏–π —Ä–µ–∂–∏–º —É–≤—ñ–º–∫–Ω–µ–Ω–æ\n\n" +
      "–î–æ–¥–∞–Ω—ñ —Ç–µ—Å—Ç–æ–≤—ñ –≥—Ä–∞–≤—Ü—ñ:\n" +
      "1. –í–∏ (–º–∞—Ñ—ñ—è)\n" +
      "2. Test Doctor (–ª—ñ–∫–∞—Ä)\n" +
      "3. Test Commissioner (–∫–æ–º—ñ—Å–∞—Ä)\n" +
      "4. Test Citizen (–º–∏—Ä–Ω–∏–π)\n\n" +
      "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä–æ–ª–µ–π."
    ).then(() => {
      sendRoleActionMessages();
    });
  });

  bot.onText(/^\/stop(@\w+)?$/, (msg, match) => {
    if (!botInfo) return;

    if (!match[1] || match[1] === `@${botInfo.username}`) {
      if (isStarted) {
        timeout = -1;
        bot.sendMessage(msg.chat.id, "<b>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –Ω–∞ –≥—Ä—É –∑—É–ø–∏–Ω–µ–Ω–æ</b>", {
          parse_mode: "HTML",
        });
        bot.deleteMessage(msg.chat.id, msg.message_id);
        isStarted = false;
      } else {
        bot.sendMessage(msg.chat.id, `–¶—é –∫–æ–º–∞–Ω–¥—É —î —Å–µ–Ω—Å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ø—ñ—Å–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏ /start@${botInfo.username}`);
      }
    }
  });

  bot.onText(/^\/extend(@\w+)?$/, (msg, match) => {
    if (!botInfo) return;

    if (!match[1] || match[1] === `@${botInfo.username}`) {
      if (!isStarted) {
        bot.sendMessage(
          msg.chat.id,
          `–ü–µ—Ä—à –Ω—ñ–∂ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É, –ø–æ—á–Ω—ñ—Ç—å —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –Ω–∞ –≥—Ä—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏: /start@${botInfo.username}`
        );
        return;
      }

      timeout += 30;
      bot.sendMessage(
        msg.chat.id,
        `–î–æ —á–∞—Å—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –¥–æ–¥–∞–Ω–æ 30 —Å–µ–∫—É–Ω–¥. –î–æ –∫—ñ–Ω—Ü—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: ${
          timeout >= 60
            ? `${
                timeout % 60 >= 60
                  ? `${Math.floor(timeout / 60)} —Ö–≤–∏–ª–∏–Ω–∏ ${timeout % 60} —Å–µ–∫—É–Ω–¥`
                  : `1 —Ö–≤–∏–ª–∏–Ω–∞ ${timeout - 60} —Å–µ–∫—É–Ω–¥`
              }`
            : `${timeout} —Å–µ–∫—É–Ω–¥`
        }`
      );
      
      bot.deleteMessage(msg.chat.id, msg.message_id);
    }
  });

  bot.on("callback_query", (callbackQuery) => {
    const user = callbackQuery.from;

    if (callbackQuery.data === "join_game") {
      const username = user.username || "";
      const fullName = `${user.first_name} ${user.last_name || ""}`.trim() || user.username;

      if (!players.find((player) => player.id === user.id)) {
        players.push({ 
          id: user.id, 
          name: fullName,
          username: username
        });
        bot.answerCallbackQuery(callbackQuery.id);
      }
    }
  });
}

module.exports = {
  setupCommandHandlers
}; 